import { None, Some } from "../core/option";
import { emoji, resultToColor, resultToMarkdown } from "../util";
class TestCoverageConverter {
    convertHeader(header) {
        if (header.data.type === "test-coverage") {
            const f = emoji(header.data.result);
            const h = `## ${f}  ${header.name}\n`;
            const coverage = `
| Type | Coverage |
| ---- | -------- |
| Line | ${header.data.line.toFixed(2)}% |
| Statement | ${header.data.statement.toFixed(2)}% |
| Function | ${header.data.function.toFixed(2)}% |
| Branch | ${header.data.branch.toFixed(2)}% |
`;
            const diff = header.data.delta;
            const dEmoji = (d) => (d > 0 ? "‚è´" : "‚è¨");
            const delta = diff == null
                ? coverage
                : `
| Type | Coverage | Delta |
| ---- | -------- | ----- |
| Line | ${header.data.line.toFixed(2)}% | ${diff.line.toFixed(2)}% ${dEmoji(diff.line)} |
| Statement | ${header.data.statement.toFixed(2)}% | ${diff.statement.toFixed(2)}% ${dEmoji(diff.statement)} |
| Function | ${header.data.function.toFixed(2)}% | ${diff.function.toFixed(2)}% ${dEmoji(diff.function)} |
| Branch | ${header.data.branch.toFixed(2)}% | ${diff.branch.toFixed(2)}% ${dEmoji(diff.branch)} |
`;
            const policy = resultToMarkdown(header.data.resultDetails);
            return Some(`
${h}
Report: [Coverage](${header.url})
${coverage}
${delta}
${policy}
`);
        }
        return None();
    }
    convertTable(table) {
        if (table.data.type === "test-coverage") {
            const color = resultToColor(table.data.result);
            const d = table.data;
            // ‚ò≤ 100% | ‚à¨ 90.2% | üúâ 25.5%
            return Some(`[![badge](https://img.shields.io/badge/coverage` +
                `-%E2%98%B2%20${d.statement.toFixed(1)}%25%20%7C%20%E2%88%AC%20${d.function.toFixed(1)}%25%20%7C%20%F0%9F%9C%89%20${d.branch.toFixed(1)}%25` +
                `-${color})](${table.url})`);
        }
        return None();
    }
}
export { TestCoverageConverter };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC1jb3ZlcmFnZS1jb252ZXJ0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL2NvbnZlcnRlci90ZXN0LWNvdmVyYWdlLWNvbnZlcnRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsSUFBSSxFQUFVLElBQUksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBRSxLQUFLLEVBQUUsYUFBYSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRWpFLE1BQU0scUJBQXFCO0lBQ3pCLGFBQWEsQ0FBQyxNQUFtQjtRQUMvQixJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLGVBQWUsRUFBRTtZQUN4QyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNwQyxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUM7WUFDdEMsTUFBTSxRQUFRLEdBQUc7OztXQUdaLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7ZUFDakMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQzthQUNqQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0NBQ3pDLENBQUM7WUFDSSxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUMvQixNQUFNLE1BQU0sR0FBRyxDQUFDLENBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ2xELE1BQU0sS0FBSyxHQUNULElBQUksSUFBSSxJQUFJO2dCQUNWLENBQUMsQ0FBQyxRQUFRO2dCQUNWLENBQUMsQ0FBQzs7O1dBR0QsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxLQUFLLE1BQU0sQ0FDOUQsSUFBSSxDQUFDLElBQUksQ0FDVjtnQkFDRyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQy9ELENBQUMsQ0FDRixLQUFLLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO2VBQ3pCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FDNUQsQ0FBQyxDQUNGLEtBQUssTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7YUFDMUIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUN0RCxDQUFDLENBQ0YsS0FBSyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztDQUNwQyxDQUFDO1lBRUksTUFBTSxNQUFNLEdBQUcsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUMzRCxPQUFPLElBQUksQ0FBQztFQUNoQixDQUFDO3FCQUNrQixNQUFNLENBQUMsR0FBRztFQUM3QixRQUFRO0VBQ1IsS0FBSztFQUNMLE1BQU07Q0FDUCxDQUFDLENBQUM7U0FDRTtRQUNELE9BQU8sSUFBSSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVELFlBQVksQ0FBQyxLQUFrQjtRQUM3QixJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLGVBQWUsRUFBRTtZQUN2QyxNQUFNLEtBQUssR0FBRyxhQUFhLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUMvQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDO1lBQ3JCLDhCQUE4QjtZQUM5QixPQUFPLElBQUksQ0FDVCxpREFBaUQ7Z0JBQy9DLGdCQUFnQixDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FDakMsQ0FBQyxDQUNGLDJCQUEyQixDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FDNUMsQ0FBQyxDQUNGLDhCQUE4QixDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSztnQkFDdkQsSUFBSSxLQUFLLE1BQU0sS0FBSyxDQUFDLEdBQUcsR0FBRyxDQUM5QixDQUFDO1NBQ0g7UUFDRCxPQUFPLElBQUksRUFBRSxDQUFDO0lBQ2hCLENBQUM7Q0FDRjtBQUVELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udmVydGVyIH0gZnJvbSBcIi4uL2ludGVyZmFjZS9jb252ZXJ0ZXJcIjtcbmltcG9ydCB7IERhdGFFbGVtZW50IH0gZnJvbSBcIi4uL2lucHV0XCI7XG5pbXBvcnQgeyBOb25lLCBPcHRpb24sIFNvbWUgfSBmcm9tIFwiLi4vY29yZS9vcHRpb25cIjtcbmltcG9ydCB7IGVtb2ppLCByZXN1bHRUb0NvbG9yLCByZXN1bHRUb01hcmtkb3duIH0gZnJvbSBcIi4uL3V0aWxcIjtcblxuY2xhc3MgVGVzdENvdmVyYWdlQ29udmVydGVyIGltcGxlbWVudHMgQ29udmVydGVyIHtcbiAgY29udmVydEhlYWRlcihoZWFkZXI6IERhdGFFbGVtZW50KTogT3B0aW9uPHN0cmluZz4ge1xuICAgIGlmIChoZWFkZXIuZGF0YS50eXBlID09PSBcInRlc3QtY292ZXJhZ2VcIikge1xuICAgICAgY29uc3QgZiA9IGVtb2ppKGhlYWRlci5kYXRhLnJlc3VsdCk7XG4gICAgICBjb25zdCBoID0gYCMjICR7Zn0gICR7aGVhZGVyLm5hbWV9XFxuYDtcbiAgICAgIGNvbnN0IGNvdmVyYWdlID0gYFxufCBUeXBlIHwgQ292ZXJhZ2UgfFxufCAtLS0tIHwgLS0tLS0tLS0gfFxufCBMaW5lIHwgJHtoZWFkZXIuZGF0YS5saW5lLnRvRml4ZWQoMil9JSB8XG58IFN0YXRlbWVudCB8ICR7aGVhZGVyLmRhdGEuc3RhdGVtZW50LnRvRml4ZWQoMil9JSB8XG58IEZ1bmN0aW9uIHwgJHtoZWFkZXIuZGF0YS5mdW5jdGlvbi50b0ZpeGVkKDIpfSUgfFxufCBCcmFuY2ggfCAke2hlYWRlci5kYXRhLmJyYW5jaC50b0ZpeGVkKDIpfSUgfFxuYDtcbiAgICAgIGNvbnN0IGRpZmYgPSBoZWFkZXIuZGF0YS5kZWx0YTtcbiAgICAgIGNvbnN0IGRFbW9qaSA9IChkOiBudW1iZXIpID0+IChkID4gMCA/IFwi4o+rXCIgOiBcIuKPrFwiKTtcbiAgICAgIGNvbnN0IGRlbHRhID1cbiAgICAgICAgZGlmZiA9PSBudWxsXG4gICAgICAgICAgPyBjb3ZlcmFnZVxuICAgICAgICAgIDogYFxufCBUeXBlIHwgQ292ZXJhZ2UgfCBEZWx0YSB8XG58IC0tLS0gfCAtLS0tLS0tLSB8IC0tLS0tIHxcbnwgTGluZSB8ICR7aGVhZGVyLmRhdGEubGluZS50b0ZpeGVkKDIpfSUgfCAke2RpZmYubGluZS50b0ZpeGVkKDIpfSUgJHtkRW1vamkoXG4gICAgICAgICAgICAgIGRpZmYubGluZVxuICAgICAgICAgICAgKX0gfFxufCBTdGF0ZW1lbnQgfCAke2hlYWRlci5kYXRhLnN0YXRlbWVudC50b0ZpeGVkKDIpfSUgfCAke2RpZmYuc3RhdGVtZW50LnRvRml4ZWQoXG4gICAgICAgICAgICAgIDJcbiAgICAgICAgICAgICl9JSAke2RFbW9qaShkaWZmLnN0YXRlbWVudCl9IHxcbnwgRnVuY3Rpb24gfCAke2hlYWRlci5kYXRhLmZ1bmN0aW9uLnRvRml4ZWQoMil9JSB8ICR7ZGlmZi5mdW5jdGlvbi50b0ZpeGVkKFxuICAgICAgICAgICAgICAyXG4gICAgICAgICAgICApfSUgJHtkRW1vamkoZGlmZi5mdW5jdGlvbil9IHxcbnwgQnJhbmNoIHwgJHtoZWFkZXIuZGF0YS5icmFuY2gudG9GaXhlZCgyKX0lIHwgJHtkaWZmLmJyYW5jaC50b0ZpeGVkKFxuICAgICAgICAgICAgICAyXG4gICAgICAgICAgICApfSUgJHtkRW1vamkoZGlmZi5icmFuY2gpfSB8XG5gO1xuXG4gICAgICBjb25zdCBwb2xpY3kgPSByZXN1bHRUb01hcmtkb3duKGhlYWRlci5kYXRhLnJlc3VsdERldGFpbHMpO1xuICAgICAgcmV0dXJuIFNvbWUoYFxuJHtofVxuUmVwb3J0OiBbQ292ZXJhZ2VdKCR7aGVhZGVyLnVybH0pXG4ke2NvdmVyYWdlfVxuJHtkZWx0YX1cbiR7cG9saWN5fVxuYCk7XG4gICAgfVxuICAgIHJldHVybiBOb25lKCk7XG4gIH1cblxuICBjb252ZXJ0VGFibGUodGFibGU6IERhdGFFbGVtZW50KTogT3B0aW9uPHN0cmluZz4ge1xuICAgIGlmICh0YWJsZS5kYXRhLnR5cGUgPT09IFwidGVzdC1jb3ZlcmFnZVwiKSB7XG4gICAgICBjb25zdCBjb2xvciA9IHJlc3VsdFRvQ29sb3IodGFibGUuZGF0YS5yZXN1bHQpO1xuICAgICAgY29uc3QgZCA9IHRhYmxlLmRhdGE7XG4gICAgICAvLyDimLIgMTAwJSB8IOKIrCA5MC4yJSB8IPCfnIkgMjUuNSVcbiAgICAgIHJldHVybiBTb21lKFxuICAgICAgICBgWyFbYmFkZ2VdKGh0dHBzOi8vaW1nLnNoaWVsZHMuaW8vYmFkZ2UvY292ZXJhZ2VgICtcbiAgICAgICAgICBgLSVFMiU5OCVCMiUyMCR7ZC5zdGF0ZW1lbnQudG9GaXhlZChcbiAgICAgICAgICAgIDFcbiAgICAgICAgICApfSUyNSUyMCU3QyUyMCVFMiU4OCVBQyUyMCR7ZC5mdW5jdGlvbi50b0ZpeGVkKFxuICAgICAgICAgICAgMVxuICAgICAgICAgICl9JTI1JTIwJTdDJTIwJUYwJTlGJTlDJTg5JTIwJHtkLmJyYW5jaC50b0ZpeGVkKDEpfSUyNWAgK1xuICAgICAgICAgIGAtJHtjb2xvcn0pXSgke3RhYmxlLnVybH0pYFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIE5vbmUoKTtcbiAgfVxufVxuXG5leHBvcnQgeyBUZXN0Q292ZXJhZ2VDb252ZXJ0ZXIgfTtcbiJdfQ==